{"version":3,"file":"index-umd.min.js","sources":["../src/index.js"],"sourcesContent":["function addResource ({before, after, element, listen, remove, acceptErrors, stylesheetURL}) {\n    let p;\n    if (listen) {\n        p = new Promise((resolve, reject) => {\n            if (acceptErrors) {\n                reject = typeof acceptErrors === 'function'\n                    ? (error) => {\n                        acceptErrors({error, resolve, reject, stylesheetURL});\n                    }\n                    : resolve;\n            }\n            const destructor = () => {\n                element.removeEventListener('error', onError);\n                element.removeEventListener('load', onLoad);\n                if (remove) {\n                    element.remove();\n                }\n            };\n            const onError = (error) => {\n                reject(error);\n                destructor();\n            };\n            const onLoad = () => {\n                resolve(element);\n                destructor();\n            };\n            element.addEventListener('error', onError);\n            element.addEventListener('load', onLoad);\n        });\n    }\n    if (before) {\n        before.before(element);\n    } else if (after) {\n        after.after(element);\n    } else {\n        document.head.append(element);\n    }\n    return p;\n}\n\n/**\n* @param {string|Array|Promise|Object} urls If an object is passed, may\n*                             include options and `url` to indicate the URL\n* @param {Object} options If `favicon` or `link` is present, `loadExternals`\n*                             will be used (loading as external stylesheet/script)\n*/\nexport const loadResources = async function (urls, {\n    autoDetectType: autoDetectTypeDefault = false,\n    before: beforeDefault = null,\n    after: afterDefault = null,\n    remove: removeDefault = false,\n    // `loadStylesheets` defaults to pass on:\n    favicon: faviconDefault = false,\n    canvas: canvasDefault = false,\n    image: imageDefault = true,\n    acceptErrors: acceptErrorsDefault = false,\n    link: linkDefault = false\n} = {}) {\n    urls = Array.isArray(urls) ? urls : [urls];\n    const proms = await Promise.all(\n        urls.map(async (url) => {\n            let options = {};\n            if (Array.isArray(url)) {\n                ([url, options = {}] = url);\n            } else if (url && typeof url === 'object') {\n                if (url.then) {\n                    return url;\n                }\n                ({\n                    url,\n                    options = {}\n                } = url);\n            }\n            const {\n                before = beforeDefault,\n                after = afterDefault,\n                remove = removeDefault,\n                canvas = canvasDefault,\n                image = imageDefault,\n                acceptErrors = acceptErrorsDefault,\n                favicon = faviconDefault,\n                link = linkDefault,\n                autoDetectType = autoDetectTypeDefault\n            } = options;\n            if (favicon || link) {\n                return {\n                    results: loadExternals(url, {\n                        before, after, remove, favicon, canvas, image, acceptErrors\n                    })\n                };\n            }\n            const res = await fetch(url);\n            return Promise.all([\n                autoDetectType ? res.clone().text() : res.text(),\n                autoDetectType\n                    ? res.blob().then((b) => b.type.includes('text/css'))\n                    : url.endsWith('.css'),\n                before,\n                after,\n                remove,\n                acceptErrors\n            ]);\n        })\n    );\n    return Promise.all(proms.map((prom) => {\n        // Pass-through other promises including from `loadStylesheets`\n        if (!Array.isArray(prom)) {\n            if (prom.results) { // Our `loadExternals` from above\n                return prom.results.then(r => r[0]);\n            }\n            // Some other hitch-hiking promise\n            return prom;\n        }\n        const [text, isCSS, before, after, remove, acceptErrors] = prom;\n        const elName = isCSS\n            ? 'style'\n            : 'script';\n        const element = document.createElement(elName);\n        element.append(text);\n        return addResource({before, after, remove, element, listen: true, acceptErrors});\n    }));\n};\n\nexport const loadExternals = function (stylesheets, {\n    before: beforeDefault = null,\n    after: afterDefault = null,\n    remove: removeDefault = false,\n    favicon: faviconDefault = false,\n    canvas: canvasDefault = false,\n    image: imageDefault = true,\n    acceptErrors: acceptErrorsDefault = false\n} = {}) {\n    stylesheets = Array.isArray(stylesheets) ? stylesheets : [stylesheets];\n\n    function setupLink (stylesheetURL) {\n        let options = {};\n        if (Array.isArray(stylesheetURL)) {\n            ([stylesheetURL, options = {}] = stylesheetURL);\n        } else if (stylesheetURL && typeof stylesheetURL === 'object') {\n            ({\n                stylesheetURL = stylesheetURL.stylesheet,\n                options = {}\n            } = stylesheetURL);\n        }\n        let {favicon = faviconDefault} = options;\n        const {\n            before = beforeDefault,\n            after = afterDefault,\n            remove = removeDefault,\n            canvas = canvasDefault,\n            image = imageDefault,\n            acceptErrors = acceptErrorsDefault\n        } = options;\n\n        const link = document.createElement('link');\n\n        if (stylesheetURL.endsWith('.css')) {\n            favicon = false;\n        } else if (stylesheetURL.endsWith('.ico')) {\n            favicon = true;\n        }\n        if (favicon) {\n            link.rel = 'shortcut icon';\n            link.type = 'image/x-icon';\n            return new Promise((resolve, reject) => {\n                if (acceptErrors) {\n                    reject = typeof acceptErrors === 'function'\n                        ? (error) => {\n                            acceptErrors({error, stylesheetURL, options, resolve, reject});\n                        }\n                        : resolve;\n                }\n                if (image === false) {\n                    link.href = stylesheetURL;\n                    addResource({before, after, remove, element: link});\n                    resolve(link);\n                    return;\n                }\n\n                const cnv = document.createElement('canvas');\n                cnv.width = 16;\n                cnv.height = 16;\n                const context = cnv.getContext('2d');\n                const img = document.createElement('img');\n                img.addEventListener('error', (error) => {\n                    reject(error);\n                });\n                img.addEventListener('load', () => {\n                    context.drawImage(img, 0, 0);\n                    link.href = canvas\n                        ? cnv.toDataURL('image/x-icon')\n                        : stylesheetURL;\n                    addResource({before, after, remove, element: link});\n                    resolve(link);\n                });\n                img.src = stylesheetURL;\n            });\n        }\n        link.rel = 'stylesheet';\n        link.type = 'text/css';\n        link.href = stylesheetURL;\n        return addResource({before, after, remove, element: link, acceptErrors, listen: true, stylesheetURL});\n    }\n\n    return Promise.all(\n        stylesheets.map(setupLink)\n    );\n};\n"],"names":["addResource","before","after","element","listen","remove","acceptErrors","stylesheetURL","p","Promise","resolve","reject","error","destructor","removeEventListener","onError","onLoad","addEventListener","head","append","loadExternals","stylesheets","beforeDefault","afterDefault","removeDefault","faviconDefault","canvasDefault","imageDefault","acceptErrorsDefault","Array","isArray","all","map","options","stylesheet","favicon","canvas","image","link","document","createElement","endsWith","rel","type","href","cnv","width","height","context","getContext","img","drawImage","toDataURL","src","async","urls","autoDetectTypeDefault","linkDefault","proms","url","then","autoDetectType","res","fetch","clone","text","blob","b","includes","prom","results","r","isCSS","elName"],"mappings":"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"}